CREATE TABLE food_type (
   type_id INT PRIMARY KEY AUTO_INCREMENT,
   type_name VARCHAR(200) CHARSET utf8
)

CREATE TABLE customer (
   customer_id INT PRIMARY KEY AUTO_INCREMENT,
   full_name VARCHAR(200) CHARSET utf8,
   email VARCHAR(200),
   password VARCHAR(200)
  
)

CREATE TABLE restaurant (
  res_id INT PRIMARY KEY AUTO_INCREMENT,
  res_name VARCHAR(200) CHARSET utf8,
  image VARCHAR(200),
  description VARCHAR(200) CHARSET utf8
)

CREATE TABLE food (
     food_id INT PRIMARY KEY AUTO_INCREMENT,
     food_name VARCHAR(200) CHARSET utf8,
     image VARCHAR(200),
     price FLOAT,
     description VARCHAR(200) CHARSET utf8,
     type_id INT,

     FOREIGN KEY (type_id) REFERENCES food_type(type_id)
)

CREATE TABLE customer_order (
   customer_id INT,
   food_id INT,
   amount INT,
   code VARCHAR(50),
   arr_sub_id VARCHAR(50),
  
   FOREIGN KEY (customer_id) REFERENCES customer(customer_id),
   FOREIGN KEY (food_id) REFERENCES food(food_id)
   
)

CREATE TABLE sub_food(
   sub_id INT PRIMARY KEY AUTO_INCREMENT,
   sub_name VARCHAR (200) CHARSET utf8,
   sub_price FLOAT,
   food_id INT,

   FOREIGN KEY (food_id) REFERENCES food(food_id)
)


CREATE TABLE like_res (
  customer_id INT,
  res_id INT ,
  date_like DATE,
  
  FOREIGN KEY (customer_id) REFERENCES customer(customer_id),
  FOREIGN KEY (res_id) REFERENCES restaurant(res_id)
)

CREATE TABLE rate_res (
    customer_id INT,
    res_id INT,
    amount INT,
    date_rate DATE,
    
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),
    FOREIGN KEY (res_id) REFERENCES restaurant(res_id)
  
)


INSERT INTO food_type (type_id, type_name) VALUES
(1, 'Món chính'),
(2, 'Món khai vị'),
(3, 'Món tráng miệng'),
(4, 'Thức uống');


INSERT INTO food (food_name, image, price, description, type_id) VALUES
('Bò lúc lắc', 'beef.jpg', 8.99, 'Bò ngon,mềm và đậm vị', 1),
('Salad trộn', 'salad.jpg', 4.99, 'Salad trộn thật bắt mắt', 2),
('Bánh socola', 'chocolate_cake.jpg', 5.99, 'Một chiếc bánh tuyệt đẹp', 3),
('Trà đá', 'iced_tea.jpg', 1.55, 'Refreshing iced tea', 4);


INSERT INTO sub_food (sub_name, sub_price, food_id) VALUES
('Khoai tây lắc phô mai', 4.99, 1),
('Bánh mì nướng muối ớt', 2.49, 1),
('Tôm sốt thái', 6.49, 1),
('Salad trộn', 2.99, 2),
('Heo sữa quay', 7.99, 2),
('Bánh kem', 3.99, 3),
('Kem, 2.99, 3),
('Bia Heniken', 3.49, 4),
('Chanh nóng', 2.99, 4);


INSERT INTO customer (full_name, email, password) VALUES
('Hằng Phan', 'hp2709@example.com', 'password123'),
('Messi', 'lionel.messi@example.com', 'qwerty456'),
('Michael Johnson', 'michael.johnson@example.com', 'securepass'),
('Christiano Ronaldo', 'cr7.ronaldo@example.com', 'myp@ssword'),
('Phước Thịnh', 'thinh.nguyenphuoc@example.com', 'strongpass!23');

INSERT INTO customer (full_name, email, password) VALUES
('Sarah Williams', 'sarah.williams@example.com', 'mypassword789'),
('Robert Lewandoski', 'robert.lewan9@example.com', 'secure123'),
('Cao Thái Sơn', 'thaisoncao@example.com', 'jenny_123'),
('William Taylor', 'william.taylor@example.com', 'passw0rd!'),
('Kaka', 'ricardo.kaka@example.com', 's0ph!a321');


INSERT INTO customer_order (customer_id, food_id, amount, code, arr_sub_id) VALUES
(1, 1, 2, 'ORDER123', '1,2'),
(2, 3, 1, 'ORDER456', '6'),  
(3, 2, 3, 'ORDER789', '4,5,7'),
(4, 4, 2, 'ORDER101', '8,9'); 

INSERT INTO customer_order (customer_id, food_id, amount, code, arr_sub_id) VALUES
(1, 1, 2, 'ORDER123', '1,2'),
(2, 3, 1, 'ORDER456', '6'),  
(3, 2, 3, 'ORDER789', '4,5,7'),
(4, 4, 2, 'ORDER101', '8,9'),
(1, 3, 1, 'ORDER222', '4'),
(3, 1, 2, 'ORDER333', '2,3'),
(4, 2, 1, 'ORDER444', '5'),
(1, 4, 3, 'ORDER555', '8,9,10'),
(2, 1, 2, 'ORDER666', '1,2'),
(4, 3, 1, 'ORDER777', '7');


INSERT INTO restaurant (res_name, image, description) VALUES
('Buffet Hoàng Yến', 'hy_buffet.jpg', 'Ăn đúng nơi, ngon đúng điệu.'),
('Café Bistro', 'cafe_bistro.jpg', 'A charming café offering gourmet coffee and light meals.'),
('Hội Ngộ restaurent', 'hn_restaurent.jpg', 'Thực đơn đa dạng những món ăn dân gian Việt Nam, đậm đà hương vị đồng quê.'),
('Taste of Asia', 'taste_of_asia.jpg', 'Experience the flavors of Asia with our authentic dishes.'),
('Ân Nam Quán', 'anq_food.jpg', 'Món ăn hấp dẫn.');


INSERT INTO rate_res (customer_id, res_id, amount, date_rate) VALUES
(1, 1, 4, '2023-09-15'),
(2, 3, 5, '2023-09-18'), 
(3, 2, 3, '2023-09-20'), 
(4, 4, 4, '2023-09-22'), 
(5, 5, 5, '2023-09-25'); 

INSERT INTO like_res (customer_id, res_id, date_like) VALUES
(1, 1, '2023-09-15'), 
(2, 3, '2023-09-18'),
(3, 2, '2023-09-20'), 
(4, 4, '2023-09-22'), 
(5, 5, '2023-09-25'); 

INSERT INTO like_res (customer_id, res_id, date_like) VALUES
(1, 2, '2023-09-17'), 
(3, 4, '2023-09-19'), 
(2, 1, '2023-09-20'),
(5, 5, '2023-09-22'), 
(1, 3, '2023-09-25'), 
(4, 2, '2023-09-27'); 


--CÂU 1 TÌM 5 NGƯỜI ĐÃ LIKE NHÀ HÀNG NHIỀU NHÁT 
SELECT c.customer_id, c.full_name AS customer_name, COUNT(l.res_id) AS total_likes
FROM customer c
LEFT JOIN like_res l ON c.customer_id = l.customer_id
GROUP BY c.customer_id, c.full_name
ORDER BY total_likes DESC
LIMIT 5;


-- CÂU 2 TÌM 2 NHÀ HÀNG CÓ LƯỢT LIKE NHIỀU NHÁT 
SELECT r.res_id, r.res_name, COUNT(l.res_id) AS total_likes
FROM restaurant r
LEFT JOIN like_res l ON r.res_id = l.res_id
GROUP BY r.res_id, r.res_name
ORDER BY total_likes DESC
LIMIT 2;


-- CÂU 3 TÌM NGƯỜI ĐÃ ĐẶT HÀNG NHIỀU NHÁT
-- chỉ lấy 1 người

SELECT c.customer_id, c.full_name, COUNT(co.customer_id) AS total_orders
FROM customer c
LEFT JOIN customer_order co ON c.customer_id = co.customer_id
GROUP BY c.customer_id, c.full_name
ORDER BY total_orders DESC
LIMIT 1;

-- theo thứ tự giảm dần 

SELECT c.customer_id, c.full_name, COUNT(co.customer_id) AS total_orders
FROM customer c
LEFT JOIN customer_order co ON c.customer_id = co.customer_id
GROUP BY c.customer_id, c.full_name
ORDER BY total_orders DESC;


--CÂU 4 TÌM NGƯỜI DÙNG KHÔNG HOẠT ĐỘNG TRONG HỆ THỐNG 
SELECT c.customer_id, c.full_name
FROM customer c
LEFT JOIN customer_order co ON c.customer_id = co.customer_id
LEFT JOIN like_res lr ON c.customer_id = lr.customer_id
LEFT JOIN rate_res rr ON c.customer_id = rr.customer_id
WHERE co.customer_id IS NULL AND lr.customer_id IS NULL AND rr.customer_id IS NULL


--CÂU 5 TÍNH TRUNG BÌNH SUBFOOD CỦA 1 FOOD 


--tính sub food của từng món 
SELECT food.food_id, food.food_name, COUNT(sub_food.sub_id) AS avg_num_side_dishes
FROM food
LEFT JOIN sub_food ON food.food_id = sub_food.food_id
GROUP BY food.food_id, food.food_name;

--tính subfood của 1 món 
SELECT ROUND(AVG(sub_dish_count), 0) AS average_sub_dishes
FROM (
    SELECT food_id, COUNT(sub_id) AS sub_dish_count
    FROM sub_food
    GROUP BY food_id
) AS sub_dish_counts;